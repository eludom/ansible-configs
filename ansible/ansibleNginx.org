#+TITLE: Ansible nginx example
#+DATE: <2015-05-31 20:09:06 Sunday>
#+AUTHOR: George M Jones
#+EMAIL: gmj@pobox.com

* What
  Install nginx using ansible, borrowing from  https://serversforhackers.com/an-ansible-tutorial

  This assumes ansible installation and ssh setup are already in
  place.  See
  https://github.com/eludom/config/blob/master/ansible/ansibleSetup.org

* Why
  Practice.  Now I can ignore setup.

* Who
  I will be borrowing from the ansible tutorial at https://serversforhackers.com/an-ansible-tutorial

* When
  After breaking out the setup functions.

* Where
  - Brand new Ubuntu 14.04.2 (which may date this going forward) VM
    running on my "lab" at home.

* How
  - Use examples from https://github.com/Servers-for-Hackers
  - Create roles directory
  - git pull nginx
  - git pull ssl
  - update roles diretory in /etc/ansible/ansible.cfg
  - link /etc/ansible/hosts to hosts.ssl
  - create server.yml
  - run server.yml
  - test


** Set Org Variables						   :noexport:

   ansibleDir stores the full path name

   #+NAME: ansibleDir
   #+begin_src sh  :results output :exports both
   echo $HOME/ansible
   #+end_src

   #+RESULTS: ansibleDir
   : /home/george/ansible

   sshKeyName is the base name of the ssh key.

   #+NAME: sshKeyName
   | ansible |

** Variables

   The scripts below use the following variables.  Your mileage may
   vary.   Source this if executing the scripts below.

   #+begin_src sh  :results output :exports results  :var ansibleDir=ansibleDir sshKeyName=sshKeyName password=password
   exec 2>&1;set -e; set -u; set +x; echo "# `date`"
   echo export ansibleDir=${ansibleDir}
   echo export sshKeyName=${sshKeyName}
   #+end_src

   #+RESULTS:
   : # Sun May 31 08:33:09 EDT 2015
   : export password=changethis
   : export ansibleDir=/home/george/ansible
   : export sshKeyName=ansible



** Add web servers to hosts file
   In this case, the job was simple so I just added the following
   lines to my "hosts.sshkeys" ansible config file by hand:

   #+begin_example
   [web]  
   192.168.1.100 ansible_ssh_user=ansibleremote ansible_ssh_private_key_file=ansible
   #+end_example

** Make sure we can talk to web server hosts and do things as root

   #+begin_src sh  :results output :exports both  :var ansibleDir=ansibleDir
   exec 2>&1;date;set -e; set -u; set -x

   cd $ansibleDir
   ansible -i hosts.sshkeys web -m ping || true
   ansible -i hosts.sshkeys web -s -m shell -a 'date' || true
   ansible -i hosts.sshkeys web -s -m shell -a 'id' || true
   #+end_src

   #+RESULTS:
   #+begin_example
   Sun May 31 17:53:30 EDT 2015
   + cd /home/george/ansible
   + ansible -i hosts.sshkeys web -m ping
   192.168.1.100 | success >> {
       "changed": false, 
       "ping": "pong"
   }

   + ansible -i hosts.sshkeys web -s -m shell -a date
   192.168.1.100 | success | rc=0 >>
   Sun May 31 17:53:36 EDT 2015

   + ansible -i hosts.sshkeys web -s -m shell -a id
   192.168.1.100 | success | rc=0 >>
   uid=0(root) gid=0(root) groups=0(root)

#+end_example

** Create roles directory and pull nginx and ssh examples
   #+begin_src sh  :results output :exports code  :var ansibleDir=ansibleDir
   exec 2>&1;date;set -e; set -u; set +x

   cd $ansibleDir
   mkdir -p roles || true
   cd roles || true

   for repo in git@github.com:Servers-for-Hackers/ansible-nginx.git git@github.com:Servers-for-Hackers/ansible-ssl-example.git; do
      base=`basename $repo`
      dir=${base%%.*}

      if [ ! -d ${dir}/.git ]; then
        pwd
        git clone $repo
      else
        cd $dir
	pwd
        git pull $repo
      fi

      cd ${ansibleDir}/roles

   done
   #+end_src

   #+RESULTS:
   : Sun May 31 19:44:46 EDT 2015
   : /home/george/ansible/roles
   : Cloning into 'ansible-nginx'...
   : /home/george/ansible/roles/ansible-ssl-example
   : From github.com:Servers-for-Hackers/ansible-ssl-example
   :  * branch            HEAD       -> FETCH_HEAD
   : Already up-to-date.


** Make sure roles_path is correct in /etc/ansible/ansible.cfg
   #+begin_src sh  :results output :exports code  :var ansibleDir=ansibleDir :dir /sudo:: 
   exec 2>&1;date;set -e; set -u; set +x

   newPath="${ansibleDir}/roles"
   grep roles_path /etc/ansible/ansible.cfg || true
   sudo sed -i '1,$s/^roles_path.*// ' /etc/ansible/ansible.cfg || true
   sudo sed -i "/roles_path/aroles_path     = $newPath " /etc/ansible/ansible.cfg || true
   #
   grep roles_path /etc/ansible/ansible.cfg || true
   #+end_src

   #+RESULTS:
   : Sun May 31 19:56:57 EDT 2015
   : #roles_path    = /etc/ansible/roles
   : roles_path     = /home/george/ansible/rolesFOO 
   : #roles_path    = /etc/ansible/roles
   : roles_path     = /home/george/ansible/roles 

** link /etc/ansible/hosts to hosts.ssl
   #+begin_src sh  :results output :exports coe  :var ansibleDir=ansibleDir :dir /sudo:: 
   exec 2>&1;date;set -e; set -u; set +x
   rm -f /etc/ansible/hosts || true 
   sshHosts="${ansibleDir}/hosts.sshkeys" 
   ln -s ${sshHosts} /etc/ansible/hosts || true
   cat /etc/ansible/hosts || true
   #+end_src

   #+RESULTS:
   : Sun May 31 20:02:25 EDT 2015
   : [default]  
   : 192.168.1.100 ansible_ssh_user=ansibleremote ansible_ssh_private_key_file=ansible
   : 
   : [web]  
   : 192.168.1.100 ansible_ssh_user=ansibleremote ansible_ssh_private_key_file=ansible


https://github.com/Servers-for-Hackers/ansible-nginx


ansible-playbook -s server.yml
   
** Create a server.yml file naming the host groups and referencing the role
   #+begin_src sh  :results output :exports code
   exec 2>&1;set -e; set -u; set +x; echo '#' `date;`
   cat <<END >server.yml
---
- hosts: web
  roles:
    - ansible-nginx
END
   cat server.yml || true
   #+end_src

   #+RESULTS:
   : # Sun May 31 20:05:21 EDT 2015
   : ---
   : - hosts: web
   :   roles:
   :     - ansible-nginx

** Run the playbook
   #+begin_src sh  :results output :exports both :var ansibleDir=ansibleDir
   exec 2>&1;set -e; set -u; set -x; echo '#' `date;`

   cd $ansibleDir || true
   ansible-playbook -s server.yml || true   
   #+end_src

   #+RESULTS:
   #+begin_example
   ++ date
   + echo '#' Sun May 31 20:07:57 EDT 2015
   # Sun May 31 20:07:57 EDT 2015
   + cd /home/george/ansible
   + ansible-playbook -s server.yml

   PLAY [web] ******************************************************************** 

   GATHERING FACTS *************************************************************** 
   ok: [192.168.1.100]

   TASK: [ssl | Create SFH SSL Directry] ***************************************** 
   ok: [192.168.1.100]

   TASK: [ssl | Upload Unencrypted Key File] ************************************* 
   ok: [192.168.1.100]

   TASK: [ssl | Upload Unencrypted Cert File] ************************************ 
   ok: [192.168.1.100]

   TASK: [ansible-nginx | Add Nginx Repository] ********************************** 
   ok: [192.168.1.100]

   TASK: [ansible-nginx | Install Nginx] ***************************************** 
   ok: [192.168.1.100]

   TASK: [ansible-nginx | Add H5BP Config] *************************************** 
   ok: [192.168.1.100]

   TASK: [ansible-nginx | Add Nginx Config] ************************************** 
   ok: [192.168.1.100]

   TASK: [ansible-nginx | Add Nginx Mime Types] ********************************** 
   ok: [192.168.1.100]

   TASK: [ansible-nginx | Disable Default Site] ********************************** 
   ok: [192.168.1.100]

   TASK: [ansible-nginx | Add SFH Site Config (main or forums)] ****************** 
   fatal: [192.168.1.100] => One or more undefined variables: 'domain' is undefined

   FATAL: all hosts have already failed -- aborting

   PLAY RECAP ******************************************************************** 
	      to retry, use: --limit @/home/george/server.retry

   192.168.1.100              : ok=10   changed=0    unreachable=1    failed=0   

   + true
#+end_example

